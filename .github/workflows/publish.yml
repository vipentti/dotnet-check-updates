# ------------------------------------------------------------------------------
# <auto-generated>
#
#     This code was generated.
#
#     - To turn off auto-generation set:
#
#         [StandardPublishGitHubActions (AutoGenerate = false)]
#
#     - To trigger manual generation invoke:
#
#         nuke --generate-configuration GitHubActions_publish --host GitHubActions
#
# </auto-generated>
# ------------------------------------------------------------------------------

name: publish

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allow running the workflow manually from the GitHub UI

permissions:
  actions: write
  checks: write
  contents: write
  deployments: write
  issues: write
  discussions: write
  packages: write
  pages: write
  statuses: write

jobs:
  windows-latest:
    name: windows-latest
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            6.x
            7.x
            8.x
      - name: 'Cache: .nuke/temp, ~/.nuget/packages'
        uses: actions/cache@v3
        with:
          path: |
            .nuke/temp
            ~/.nuget/packages
          key: ${{ runner.os }}-${{ hashFiles('**/global.json', '**/*.csproj', '**/Directory.Packages.props') }}
      - name: 'Run: RestoreLocalTools, Test, InstallLinters, Lint, Pack, ValidatePackages, Publish'
        run: ./build.cmd RestoreLocalTools Test InstallLinters Lint Pack ValidatePackages Publish
        env:
          NuGetApiKey: ${{ secrets.NUGET_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PackageOwner: ${{ vars.PACKAGE_OWNER }}
          NuGetSource: ${{ vars.NUGET_SOURCE }}
  ubuntu-latest:
    name: ubuntu-latest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            6.x
            7.x
            8.x
      - name: 'Cache: .nuke/temp, ~/.nuget/packages'
        uses: actions/cache@v3
        with:
          path: |
            .nuke/temp
            ~/.nuget/packages
          key: ${{ runner.os }}-${{ hashFiles('**/global.json', '**/*.csproj', '**/Directory.Packages.props') }}
      - name: 'Run: RestoreLocalTools, Test, InstallLinters, Lint, Pack, ValidatePackages, Publish'
        run: ./build.cmd RestoreLocalTools Test InstallLinters Lint Pack ValidatePackages Publish
        env:
          NuGetApiKey: ${{ secrets.NUGET_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PackageOwner: ${{ vars.PACKAGE_OWNER }}
          NuGetSource: ${{ vars.NUGET_SOURCE }}
  macos-latest:
    name: macos-latest
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            6.x
            7.x
            8.x
      - name: 'Cache: .nuke/temp, ~/.nuget/packages'
        uses: actions/cache@v3
        with:
          path: |
            .nuke/temp
            ~/.nuget/packages
          key: ${{ runner.os }}-${{ hashFiles('**/global.json', '**/*.csproj', '**/Directory.Packages.props') }}
      - name: 'Run: RestoreLocalTools, Test, InstallLinters, Lint, Pack, ValidatePackages, Publish'
        run: ./build.cmd RestoreLocalTools Test InstallLinters Lint Pack ValidatePackages Publish
        env:
          NuGetApiKey: ${{ secrets.NUGET_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PackageOwner: ${{ vars.PACKAGE_OWNER }}
          NuGetSource: ${{ vars.NUGET_SOURCE }}
